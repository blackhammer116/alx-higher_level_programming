===============================================
	Dividing a matrix
	Test file for matrix_divided
===============================================

Importing the file

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test cases
	>>> matrix = [[1, 2, 3], [4, 5, 6]]

	
	>>> matrix_2 = [[1, 2, "3"], [4, 5, 6]]

	>>> matrix_3 = [[1, 2, 3, 4], [4, 5, 6]]
	
	>>> matrix_4 = [1,2,3]

	>>> matrix_divided(matrix_3, 3)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

	matrix_divided(matrix_4, 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

	>>> matrix_divided(matrix, -3)
	[[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]

	>>> matrix_divided(matrix, "asd")
	Traceback (most recent call last):
	TypeError: div must be a number

	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

	>>> matrix_divided()
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

	>>> matrix_divided(matrix_2, 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided(matrix)
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 1 required positional argument: 'div'
